{% set name = "lalpulsar" %}
{% set version = "2.0.0" %}
{% set sha256 = "fb9e1217eca7302baa5631c8510223bb6fcd7b0f755d5bed2a965130a4ff1a46" %}

{% set lal_version = "7.0.0" %}
{% set swig_version = "3.0.9" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: http://software.ligo.org/lscsoft/source/lalsuite/{{ name }}-{{ version }}.tar.xz
  sha256: {{ sha256 }}

build:
  error_overdepending: true
  error_overlinking: true
  ignore_run_exports:
    # run_exports parsing for fftw is broken, so we ignore it
    # manually, for now
    - fftw
  number: 1
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - libgomp  # [linux]
    - llvm-openmp  # [osx]
    - make
    - pkg-config >=0.18.0
    - swig >={{ swig_version }}
  host:
    - cfitsio
    - fftw * nompi*
    - gsl
    - lal >={{ lal_version }} fftw*
    - libgomp  # [linux]
    - llvm-openmp  # [osx]
  run:
    - cfitsio
    - fftw
    - gsl
    - lal >={{ lal_version }}
    - llvm-openmp  # [osx]

test:
  requires:
    - pkg-config  # [unix]
  commands:
    - test ${LALPULSAR_DATADIR} == "${PREFIX}/share/lalpulsar"  # [unix]
    - lalpulsar_version --verbose
    - test "$(pkg-config --modversion ${PKG_NAME})" == "${PKG_VERSION}"  # [unix]

outputs:
  - name: lalpulsar
    build:
      run_exports:
        - {{ pin_subpackage("lalpulsar", max_pin="x.x") }}

  - name: python-lalpulsar
    script: install-python.sh
    build:
      ignore_run_exports:
        - python
    requirements:
      build:
        - {{ compiler('c') }}
        - make
        - pkg-config >=0.18.0
        - swig >={{ swig_version }}
      host:
        - astropy
        - gsl
        - lal >={{ lal_version }}
        - {{ pin_subpackage('lalpulsar', exact=True) }}
        - numpy
        - pytest >=4.0.0a0
        - python
        - python-lal >={{ lal_version }}
      run:
        - astropy
        - cfitsio  # [linux]
        - fftw  # [linux]
        - gsl
        - lal >={{ lal_version }}
        - {{ pin_subpackage('lalpulsar', exact=True) }}
        - {{ pin_compatible('numpy') }}
        - python
        - python-lal >={{ lal_version }}
        - six
    test:
      imports:
        - lalpulsar
        - lalpulsar.NstarTools
        - lalpulsar.PulsarParametersWrapper
        - lalpulsar.simulateCW
      requires:
        - pytest >=4.0.0a0
      source_files:
        - test/python
      commands:
        - pushd test/python; LAL_TEST_PKGDATADIR="${LALPULSAR_DATADIR}" python -m pytest -v; popd
    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lalpulsar/
      dev_url: https://git.ligo.org/lscsoft/lalsuite/
      license: GPL-2.0-or-later
      license_family: GPL
      license_file: COPYING
      summary: LSC Algorithm Pulsar Library
      description: |
        The LSC Algorithm Pulsar Library for gravitational wave data analysis.
        This package contains the python bindings.

about:
  home: https://wiki.ligo.org/Computing/LALSuite
  doc_url: https://lscsoft.docs.ligo.org/lalsuite/lalpulsar/
  dev_url: https://git.ligo.org/lscsoft/lalsuite/
  license: GPL-2.0-or-later
  license_family: GPL
  license_file: COPYING
  summary: LSC Algorithm Pulsar Library
  description: |
    The LSC Algorithm Pulsar Library for gravitational wave data analysis.
    This package contains the shared-object libraries needed to run
    applications that use the LAL Pulsar library.  If you want to install
    the Python bindings, please install the associated python-lalpulsar
    package.

extra:
  recipe-maintainers:
    - duncanmmacleod
    - skymoo
